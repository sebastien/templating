#!/usr/bin/env python3
# encoding: utf-8
import json, sys, difflib
from   templating import Template

def format( lines ):
	res = []
	for i, line in enumerate(lines.split("\n")):
		res.append("{0:3d}:{1}".format(i ,line))
	return "\n".join(res)

def run_test( text ):
	text = u"\n".join([_ for _  in text.split(u"\n") if not _.startswith("#")])
	data, template, expected = text.split("\n===\n")
	data     = json.loads(data)
	template = Template(template)
	actual   = template.apply(data)
	expected = expected[:-1]
	diff = [_ for _ in difflib.context_diff(expected.split("\n"), actual.split("\n"), fromfile='expected.txt', tofile='actual.txt')]
	return len(diff) == 0, expected, actual, diff

if __name__ == "__main__":
	success  = 0
	failures = 0
	for _ in sys.argv[1:]:
		with open(_, "rt") as f:
			result, espected, actual, diff = run_test(f.read())
			if result:
				success += 1
				sys.stderr.write("[âœ”] Test `{0}` succeeded\n".format(_))
			else:
				failures += 1
				sys.stderr.write("-!- Test `{0}` failed:\n".format(_))
				for line in diff:
					sys.stderr.write(line)
					sys.stderr.write("\n")
	if failures > 0:
		sys.exit(1)
	else:
		sys.exit(0)


# EOF - vim: ts=4 sw=4 noet
